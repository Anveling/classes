#!/usr/bin/env python

"""
Ensure's that the usernames are valid
Input: "IDS" sheet from the "gradebook" Google Drive spreadsheet
"""

__EXAMPLE_USAGE__ = """
python admin/verify_student_usernames -t $GITLAB_TOKEN gradebook.csv
"""


import requests
import pandas as pd

import argparse
import json
import sys


URL = 'https://gitlab.com'
USER_URL = URL + '/u'


def getopts():

    p = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter,
                                description=__doc__,
                                epilog=__EXAMPLE_USAGE__,
    )

    p.add_argument('-t', '--token', help='GitLab API token for authentication')
    p.add_argument('students', metavar='CSV',
                   help="CSV file exported from the 'IDS' sheet of the 'gradebook' on Google Drive")

    return p.parse_args()


if __name__ == '__main__':

    opts = getopts()

    students_all = pd.read_csv(opts.students, header=0)
    students_all = students_all.dropna()
    students = students_all.drop_duplicates(subset='Student')
    assert len(students) == len(students_all)

    usernames = students['Gitlab Username']
    print usernames

    for user in usernames:

        url = USER_URL + '/{}'.format(user)

        r = requests.get(url)

        if r.status_code == 404:
            print user, 'DOES NOT EXIST'

        elif r.status_code == 200:
            pass

        else:
            print user, 'http status', r.status_code
